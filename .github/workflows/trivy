name: Build & Trivy Scan (GCP Artifact Registry)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

env:
  APP_NAME: mi-application
  PROJECT_ID: hypnotic-epoch-411523
  REGION: us-central1
  REPO: cloud-jenkins-registry
  IMAGE_NAME: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.APP_NAME }}:latest

jobs:
  build-trivy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java & Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build with Maven
        run: |
          set -eux
          mvn -v
          mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud (OIDC)
        id: 'auth'
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          # O si prefieres usar un secret con json:
          # credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'

      - name: Configure Docker to use GCP Artifact Registry
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'gke-gcloud-auth-plugin'
      - run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          set -eux
          echo "Building image: $IMAGE_NAME"
          docker build -t "$IMAGE_NAME" .

      # ---- TRIVY SCAN ----
      - name: Scan image with Trivy (table)
        continue-on-error: true
        run: |
          set -eux
          echo "==> Trivy (HIGH/CRITICAL in console)"
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest image \
              --scanners vuln \
              --no-progress \
              --format table \
              --severity HIGH,CRITICAL \
              "$IMAGE_NAME" || true

      - name: Scan image with Trivy (SARIF)
        continue-on-error: true
        run: |
          set -eux
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$PWD":/workspace \
            aquasec/trivy:latest image \
              --scanners vuln \
              --no-progress \
              --format sarif \
              -o /workspace/trivy-image.sarif \
              --severity HIGH,CRITICAL \
              "$IMAGE_NAME" || true
          echo "Reporte SARIF generado en $PWD/trivy-image.sarif"

      - name: Upload SARIF to GitHub Security
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif

      # Opcional: Push a Artifact Registry (si lo deseas)
      # - name: Push Docker image
      #   run: |
      #     docker push "$IMAGE_NAME"
