name: Detect Secrets (Yelp)

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  detect-secrets:
    runs-on: ubuntu-latest
    env:
      DETECT_SECRETS_EXCLUDES: '(\/\.git\/|\/node_modules\/|\/target\/|\/build\/|\/dist\/|\/coverage\/|\/\.secrets\.(baseline|json|diff|new)$)'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install detect-secrets
        run: |
          set -euxo pipefail
          python -V
          pip install --upgrade pip
          pip install "detect-secrets==1.5.0"
          detect-secrets --version || true

      # OPCIONAL: sonda para validar (dejar comentado)
      # - name: Inject fake secrets (for validation only)
      #   if: ${{ github.event_name == 'pull_request' }}
      #   run: |
      #     mkdir -p tests
      #     cat > tests/secret_probe.txt <<'EOF'
      #     AWS_ACCESS_KEY_ID=AKIA1234567890ABCD12
      #     AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      #     GITHUB_TOKEN=ghp_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
      #     SLACK_BOT_TOKEN=xoxb-123456789012-123456789012-ABCdefGHIjklMNOpqrSTUvwx
      #     JWT_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTYifQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      #     EOF

      - name: Run detect-secrets scan
        run: |
          set -euxo pipefail

          if [ -f ".secrets.baseline" ]; then
            echo "Using existing baseline (.secrets.baseline)"
            detect-secrets scan \
              --all-files \
              --exclude-files "${DETECT_SECRETS_EXCLUDES}" \
              --baseline .secrets.baseline \
              > .secrets.json
          else
            echo "No baseline present; scanning entire repo"
            detect-secrets scan \
              --all-files \
              --exclude-files "${DETECT_SECRETS_EXCLUDES}" \
              > .secrets.json
          fi

          # Guardar script de resumen (evita heredocs en YAML)
          cat > summarize_scan.py <<'PY'
import json, sys, collections, pathlib
p = pathlib.Path(".secrets.json")
if not p.exists():
    print("No report found (.secrets.json).")
    sys.exit(2)
with p.open() as f:
    data = json.load(f)
results = data.get("results", {})
count = sum(len(v) for v in results.values())
by_type = collections.Counter()
for path, findings in results.items():
    for fnd in findings:
        by_type[fnd.get("type","UNKNOWN")] += 1
print(f"Possible secrets found: {count}")
for t, c in by_type.most_common():
    print(f"  - {t}: {c}")
for path, findings in results.items():
    print(f"[{len(findings)}] {path}")
sys.exit(1 if count > 0 else 0)
PY

          python summarize_scan.py

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detect-secrets-report
          path: .secrets.json
          if-no-files-found: warn
