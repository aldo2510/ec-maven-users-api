pipeline {
  agent none

  environment {
    SNYK_ORG = 'josealdotrucios' // tu org/slug en Snyk
  }

  stages {
    stage('Build') {
      agent { docker { image 'maven:3.9.6-eclipse-temurin-17' } }
      steps {
        sh 'mvn -B -DskipTests verify'
      }
      post {
        success {
          archiveArtifacts artifacts: 'target/*.jar', fingerprint: true, onlyIfSuccessful: true
        }
      }
    }

    // ======== SAST con CLI (opcional) ========
    stage('Snyk Code (CLI) – HTML + SARIF + break build') {
      agent { docker { image 'node:20-alpine' } } // ya trae npm/npx
      environment {
        SNYK_DISABLE_ANALYTICS = '1'
        SNYK_INTEGRATION_NAME  = 'jenkins-cli'
      }
      steps {
        withCredentials([string(credentialsId: 'organisation-snyk-api-token-secret', variable: 'SNYK_TOKEN')]) {
          sh '''
            set +e

            # Autenticación y versión (sin instalaciones globales)
            npx -y snyk@latest --version
            npx -y snyk@latest auth "$SNYK_TOKEN"

            # Análisis SAST con umbral de severidad; CAPTURAMOS el exit code para romper el build
            npx -y snyk@latest code test \
              --org="${SNYK_ORG}" \
              --severity-threshold=high \
              --json-file-output=snyk-code.json
            EXIT_CODE=$?

            # Artefactos extra (no afectan el estado del build)
            npx -y snyk@latest code test \
              --org="${SNYK_ORG}" \
              --severity-threshold=high \
              --sarif > snyk-code.sarif || true

            npx -y snyk-to-html@latest -i snyk-code.json -o snyk-code.html || true

            # Snapshot a Snyk (monitor)
            npx -y snyk@latest monitor \
              --org="${SNYK_ORG}" \
              --project-name="${JOB_NAME}-code" \
              --source=cli-code || true

            # Devolver el exit code real del test para romper el build si hubo HIGH/CRITICAL
            exit $EXIT_CODE
          '''
        }
      }
      post {
        always {
          archiveArtifacts artifacts: 'snyk-code.*', allowEmptyArchive: true

          // HTML Publisher: ver reporte navegable en la página del job
          publishHTML(target: [
            reportName: 'Snyk Code',
            reportDir: '.',
            reportFiles: 'snyk-code.html',
            keepAll: true,
            alwaysLinkToLastBuild: true,
            allowMissing: true
          ])

          // Warnings NG: muestra SARIF en "Static Analysis"
          recordIssues enabledForFailure: true,
                      tools: [sarif(pattern: 'snyk-code.sarif')],
                      qualityGates: [[threshold: 1, type: 'TOTAL', unstable: false]]
        }
      }
    }

  }
}
