pipeline {
  agent none

  environment {
    SNYK_ORG = 'josealdotrucios'
  }

  stages {
    stage('Build') {
      agent { docker { image 'maven:3.9.6-eclipse-temurin-17' } }
      steps {
        sh 'mvn -B -DskipTests verify'
      }
      post {
        success {
          archiveArtifacts artifacts: 'target/*.jar', fingerprint: true, onlyIfSuccessful: true
        }
      }
    }

    stage('Snyk Code (CLI) – HTML + SARIF + break build') {
      agent { docker { image 'node:22-alpine' } } // trae npm para instalar utilidades
      environment {
        SNYK_DISABLE_ANALYTICS = '1'
        SNYK_INTEGRATION_NAME  = 'jenkins-cli'
      }
      steps {
        withCredentials([string(credentialsId: 'organisation-snyk-api-token-secret', variable: 'SNYK_TOKEN')]) {
          sh '''
            set +e
            npm -g i snyk@latest snyk-to-html@latest

            snyk auth "$SNYK_TOKEN"

            # Ejecuta el análisis y GUARDA el exit code para romper el build si encuentra HIGH+
            snyk code test \
              --org="${SNYK_ORG}" \
              --severity-threshold=high \
              --json-file-output=snyk-code.json
            EXIT_CODE=$?

            # Genera SARIF (para Static Analysis en Jenkins/GitHub) y HTML (para ver en Jenkins)
            snyk code test \
              --org="${SNYK_ORG}" \
              --severity-threshold=high \
              --sarif > snyk-code.sarif || true

            snyk-to-html -i snyk-code.json -o snyk-code.html || true

            # Snapshot a Snyk (no afecta el estado del build)
            snyk monitor \
              --org="${SNYK_ORG}" \
              --project-name="${JOB_NAME}-code" \
              --source=cli-code || true

            # Publicamos reportes y luego devolvemos el exit code real del test
            exit $EXIT_CODE
          '''
        }
      }
      post {
        always {
          archiveArtifacts artifacts: 'snyk-code.*', allowEmptyArchive: true

          // Necesita el plugin HTML Publisher
          publishHTML(target: [
            reportName: 'Snyk Code',
            reportDir: '.',
            reportFiles: 'snyk-code.html',
            keepAll: true,
            alwaysLinkToLastBuild: true,
            allowMissing: true
          ])

          // Necesita el plugin Warnings Next Generation (muestra el SARIF en "Static Analysis")
          recordIssues enabledForFailure: true,
                       tools: [sarif(pattern: 'snyk-code.sarif')],
                       qualityGates: [[threshold: 1, type: 'TOTAL', unstable: false]]
        }
      }
    }
  }
}
